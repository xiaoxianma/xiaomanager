"""init

Revision ID: 4658cd0039dd
Revises: 
Create Date: 2020-10-19 21:15:08.723034-07:00

"""
import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op

# revision identifiers, used by Alembic.
revision = "4658cd0039dd"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accountowner",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(
        op.f("ix_accountowner_id"), "accountowner", ["id"], unique=False
    )
    op.create_table(
        "expensetype",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(
        op.f("ix_expensetype_id"), "expensetype", ["id"], unique=False
    )
    op.create_table(
        "institution",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(
        op.f("ix_institution_id"), "institution", ["id"], unique=False
    )
    op.create_table(
        "merchant",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("city", sa.String(), nullable=True),
        sa.Column(
            "country",
            sqlalchemy_utils.types.country.CountryType(length=2),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_merchant_id"), "merchant", ["id"], unique=False)
    op.create_table(
        "rewardtype",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(
        op.f("ix_rewardtype_id"), "rewardtype", ["id"], unique=False
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_superuser", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_table(
        "account",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("institution_id", sa.Integer(), nullable=True),
        sa.Column("account_owner_id", sa.Integer(), nullable=True),
        sa.Column(
            "account_type",
            sa.Enum(
                "credit_card",
                "debit_card",
                "cash",
                "checking",
                "saving",
                name="accounttype",
            ),
            nullable=True,
        ),
        sa.Column("number", sa.String(), nullable=True),
        sa.Column("alias", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_owner_id"], ["accountowner.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["institution_id"], ["institution.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_account_id"), "account", ["id"], unique=False)
    op.create_table(
        "reward",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=True),
        sa.Column("reward_type_id", sa.Integer(), nullable=True),
        sa.Column("xpoints", sa.Integer(), nullable=True),
        sa.Column("start_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.CheckConstraint("xpoints > 0", name="check_xponits_positive"),
        sa.ForeignKeyConstraint(
            ["account_id"], ["account.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["reward_type_id"], ["rewardtype.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_reward_id"), "reward", ["id"], unique=False)
    op.create_table(
        "transaction",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=True),
        sa.Column("account_id", sa.Integer(), nullable=True),
        sa.Column("merchant_id", sa.Integer(), nullable=True),
        sa.Column("expense_type_id", sa.Integer(), nullable=True),
        sa.Column(
            "transaction_date", sa.DateTime(timezone=True), nullable=False
        ),
        sa.Column("coupon", sa.Integer(), nullable=True),
        sa.Column("tags", sa.String(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("created", sa.DateTime(timezone=True), nullable=False),
        sa.CheckConstraint("coupon > 0", name="check_coupon_positive"),
        sa.ForeignKeyConstraint(
            ["account_id"], ["account.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["expense_type_id"], ["expensetype.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["merchant_id"], ["merchant.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_transaction_id"), "transaction", ["id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_transaction_id"), table_name="transaction")
    op.drop_table("transaction")
    op.drop_index(op.f("ix_reward_id"), table_name="reward")
    op.drop_table("reward")
    op.drop_index(op.f("ix_account_id"), table_name="account")
    op.drop_table("account")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_rewardtype_id"), table_name="rewardtype")
    op.drop_table("rewardtype")
    op.drop_index(op.f("ix_merchant_id"), table_name="merchant")
    op.drop_table("merchant")
    op.drop_index(op.f("ix_institution_id"), table_name="institution")
    op.drop_table("institution")
    op.drop_index(op.f("ix_expensetype_id"), table_name="expensetype")
    op.drop_table("expensetype")
    op.drop_index(op.f("ix_accountowner_id"), table_name="accountowner")
    op.drop_table("accountowner")
    # ### end Alembic commands ###
